version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - broker-1
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker-1:29091 #,broker-2:29092,broker-3:29093

  
  broker-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9091:9091
      - 29091:29091
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:29091,PLAINTEX_HOST://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEX_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 19101
      EXTRA_ARGS: -javaagent:/packages/jmx_exporter/jmx_prometheus_javaagent-0.20.0.jar=29101:/usr/share/jmx_exporter/kafka-broker-1.yml
    volumes:      
      - ./mount/jmx-exporter:/usr/share/jmx_exporter/      
      - ./mount/kafka-jmx-volume:/jmx-exporter/
      - ./mount/packages:/packages/jmx_exporter/

  connect:
    container_name: connect
    image: quay.io/debezium/connect
    ports:
      - 8083:8083
    environment:
      - BOOTSTRAP_SERVERS=broker-1:29091
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    depends_on:
      - broker-1
    volumes:
      - ./connectors:/kafka/connectors/

  debezium-ui:
    container_name: debezium-ui
    image: debezium/debezium-ui
    ports:
      - 8081:8080
    environment:
      KAFKA_CONNECT_URIS: http://connect:8083
    depends_on:
      - connect
  
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"

  mysql:
    container_name: mysql
    image: mysql
    # volumes:
    #   - "./.mysql-data/db:/var/lib/mysql"
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpw
      MYSQL_DATABASE: cabin
      MYSQL_USER: cabin
      MYSQL_PASSWORD: cabinpw
